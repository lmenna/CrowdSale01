{
  "contractName": "ZepTokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_investorMinCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "_investorContributions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "developersFundAddr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_WHITELISTED",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "removeAddressesFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "removeAddressFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "foundersPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "foundersFundAddr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "foundersTimelockAddr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "phase",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "developersPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "communityPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partnersFundAddr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_investorMaxCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "addAddressesToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partnersPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "goal",
          "type": "uint256"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "foundersFund",
          "type": "address"
        },
        {
          "name": "partnersFund",
          "type": "address"
        },
        {
          "name": "developersFund",
          "type": "address"
        },
        {
          "name": "releaseTokensTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contributor",
          "type": "address"
        }
      ],
      "name": "getUserContribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newPhase",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsalePhase",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1091:5581:2:-;;;384:5:7;358:31;;;;;;;;;;;;;;;;;;;;1358:17:2;1325:50;;1424:21;1391:54;;1675:21;1645:51;;;;;;;;;;;;;;;;;;;;;;;;;;1762:2;1725:39;;1804:2;1768:38;;1846:2;1810:38;;1890:2;1852:40;;2561:605;8:9:-1;5:2;;;30:1;27;20:12;5:2;2561:605:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:4;2904:11;2917;2880:3;2839:4;2845:6;2853:5;575:10:15;567:5;;:18;;;;;;;;;;;;;;;;;;2022:1:6;2014:5;:9;2006:18;;;;;;;;2057:1;2038:21;;:7;:21;;;;2030:30;;;;;;;;2092:1;2074:20;;:6;:20;;;;2066:29;;;;;;;;2109:5;2102:4;:12;;;;2129:7;2120:6;;:16;;;;;;;;;;;;;;;;;;2150:6;2142:5;;:14;;;;;;;;;;;;;;;;;;1935:226;;;472:1:10;465:4;:8;457:17;;;;;;;;486:4;480:3;:10;;;;418:77;886:15:11;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;717:1:8;709:5;:9;701:18;;;;;;;;751:6;;;;;;;;;;;734:24;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;734:24:8;725:6;;:33;;;;;;;;;;;;;;;;;;771:5;764:4;:12;;;;661:120;2997:3:2;2989:4;:11;;2981:20;;;;;;;;3028:12;3009:16;;:31;;;;;;;;;;;;;;;;;;3067:12;3048:16;;:31;;;;;;;;;;;;;;;;;;3108:14;3087:18;;:35;;;;;;;;;;;;;;;;;;3144:17;3130:11;:31;;;;2561:605;;;;;;;;;;;1091:5581;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1091:5581:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:21:6;2401:10;2391:9;:21::i;:::-;1091:5581:2;837:114:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;837:114:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:50:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1325:50:2;;;;;;;;;;;;;;;;;;;;;;;1460:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1460:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:153:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:33:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2041:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;340:53:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;340:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:136:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1091:136:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:201:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:201:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:19:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:19:6;;;;;;;;;;;;;;;;;;;;;;;252:18:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:18:10;;;;;;;;;;;;;;;;;;;;;;;452:19:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:19:8;;;;;;;;;;;;;;;;;;;;;;;1354:24:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:24:6;;;;;;;;;;;;;;;;;;;;;;;292:26:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:11;;;;;;;;;;;;;;;;;;;;;;;560:163:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:7;;;;;;603:83:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:21:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1768:38:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1768:38:2;;;;;;;;;;;;;;;;;;;;;;;1932:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1932:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1967:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1967:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:15;;;;;;790:124:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;790:124:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:85:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:85:8;;;;;;;;;;;;;;;;;;;;;;;;;;;4650:450:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4650:450:2;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;987:133:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;987:133:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:51:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1645:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:124:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:124:8;;;;;;262:26:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:11;;;;;;;;;;;;;;;;;;;;;;;2078::2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2078:26:2;;;;;;;;;;;;;;;;;;;;;;;4359:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4359:139:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1852:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1852:40:2;;;;;;;;;;;;;;;;;;;;;;;1725:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1725:39:2;;;;;;;;;;;;;;;;;;;;;;;2006:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2006:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1391:54:2;;;;;;;;;;;;;;;;;;;;;;;1338:191:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1338:191:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:577:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1810:38:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1810:38:2;;;;;;;;;;;;;;;;;;;;;;;940:18:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;940:18:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:577;2616:17;2747:14;2636:9;2616:29;;2651:45;2672:12;2686:9;2651:20;:45::i;:::-;2764:26;2780:9;2764:15;:26::i;:::-;2747:43;;2829:24;2843:9;2829;;:13;;:24;;;;:::i;:::-;2817:9;:36;;;;2860:38;2877:12;2891:6;2860:16;:38::i;:::-;2948:12;2909:88;;2930:10;2909:88;;;2968:9;2985:6;2909:88;;;;;;;;;;;;;;;;;;;;;;;;3004:47;3027:12;3041:9;3004:22;:47::i;:::-;3058:15;:13;:15::i;:::-;3079:46;3101:12;3115:9;3079:21;:46::i;:::-;2553:577;;;:::o;837:114:4:-;917:29;936:9;917:5;923;917:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;917:12:4;;;;;;;;;;;;;;;;;;;;;:18;;:29;;;;:::i;:::-;837:114;;:::o;1325:50:2:-;;;;:::o;1460:57::-;;;;;;;;;;;;;;;;;:::o;1169:153:11:-;1211:4;1306:11;;1288:15;:29;1281:36;;1169:153;:::o;2041:33:2:-;;;;;;;;;;;;;:::o;340:53:3:-;;;;;;;;;;;;;;;;;;;;:::o;1091:136:4:-;1174:4;1195:27;1212:9;1195:5;1201;1195:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1195:12:4;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1188:34;;1091:136;;;;:::o;2129:201:3:-;2227:9;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;2239:1:3;2227:13;;2222:104;2246:10;:17;2242:1;:21;2222:104;;;2278:41;2305:10;2316:1;2305:13;;;;;;;;;;;;;;;;;;2278:26;:41::i;:::-;2265:3;;;;;;;2222:104;;;2129:201;;:::o;1756:132::-;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1844:39:3;1855:9;1866:16;;;;;;;;;;;;;;;;;;1844:10;:39::i;:::-;1756:132;:::o;1304:19:6:-;;;;:::o;252:18:10:-;;;;:::o;452:19:8:-;;;;:::o;1354:24:6:-;;;;:::o;292:26:11:-;;;;:::o;560:163:7:-;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:7;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;603:83:10:-;646:4;678:3;;665:9;;:16;;658:23;;603:83;:::o;1002:21:6:-;;;;;;;;;;;;;:::o;1768:38:2:-;;;;:::o;1932:31::-;;;;;;;;;;;;;:::o;1967:35::-;;;;;;;;;;;;;:::o;1001:111:15:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;790:124:3:-;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;873:36:3;881:9;892:16;;;;;;;;;;;;;;;;;;873:7;:36::i;:::-;790:124;:::o;1106:85:8:-;1150:4;1182;;1169:9;;:17;;1162:24;;1106:85;:::o;4650:450:2:-;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;4751:8:2;4725:21;4720:27;;;;;;;;:39;4717:189;;;4777:21;4769:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;4717:189;;;4849:8;4820:24;4815:30;;;;;;;;:42;4811:95;;;4875:24;4867:5;;:32;;;;;;;;;;;;;;;;;;;;;;;;4811:95;4717:189;4974:21;4965:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;4962:134;;;5012:3;5005:4;:10;;;;4962:134;;;5045:24;5036:33;;;;;;;;:5;;;;;;;;;;;:33;;;;;;;;;5032:64;;;5086:3;5079:4;:10;;;;5032:64;4962:134;4650:450;:::o;358:31:7:-;;;;;;;;;;;;;:::o;238:20:15:-;;;;;;;;;;;;;:::o;987:133:3:-;1058:4;1079:36;1087:9;1098:16;;;;;;;;;;;;;;;;;;1079:7;:36::i;:::-;1072:43;;987:133;;;:::o;1645:51:2:-;;;;;;;;;;;;;:::o;869:124:8:-;913:11;;;;;;;;;;;905:20;;;;;;;;940:13;:11;:13::i;:::-;939:14;931:23;;;;;;;;961:6;;;;;;;;;;;:15;;;977:10;961:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:27:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;961:27:8;;;;869:124::o;262:26:11:-;;;;:::o;2078::2:-;;;;:::o;4359:139::-;4433:7;4457:22;:35;4480:11;4457:35;;;;;;;;;;;;;;;;4450:43;;4359:139;;;:::o;1852:40::-;;;;:::o;1725:39::-;;;;:::o;2006:31::-;;;;;;;;;;;;;:::o;1391:54::-;;;;:::o;1338:191:3:-;1431:9;719:5:15;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1443:1:3;1431:13;;1426:99;1450:10;:17;1446:1;:21;1426:99;;;1482:36;1504:10;1515:1;1504:13;;;;;;;;;;;;;;;;;;1482:21;:36::i;:::-;1469:3;;;;;;;1426:99;;;1338:191;;:::o;1274:103:15:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1810:38:2:-;;;;:::o;940:18:6:-;;;;;;;;;;;;;:::o;3592:461:2:-;3746:29;3819:23;3690:50;3717:11;3730:9;3690:26;:50::i;:::-;3778:22;:35;3801:11;3778:35;;;;;;;;;;;;;;;;3746:67;;3845:46;3858:21;3881:9;3845:12;:46::i;:::-;3819:72;;3924:15;;3905;:34;;3897:43;;;;;;;;3973:15;;3954;:34;;3946:43;;;;;;;;4033:15;3995:22;:35;4018:11;3995:35;;;;;;;;;;;;;;;:53;;;;3592:461;;;;:::o;5796:121:6:-;5868:7;5892:20;5907:4;;5892:10;:14;;:20;;;;:::i;:::-;5885:27;;5796:121;;;:::o;1238:128:14:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;5024:150:6:-;5127:42;5142:12;5156;5127:14;:42::i;:::-;5024:150;;:::o;5427:131::-;;;:::o;5225:202:2:-;5278:21;5269:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;5266:157;;;5309:6;;;;;;;;;;;:15;;:26;5325:9;5309:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5309:26:2;5266:157;;;5361:24;5352:33;;;;;;;;:5;;;;;;;;;;;:33;;;;;;;;;5348:75;;;5395:21;:19;:21::i;:::-;5348:75;5266:157;5225:202::o;4232:130:6:-;;;:::o;666:111:5:-;754:17;758:5;765;754:3;:17::i;:::-;746:26;;;;;;;;666:111;;:::o;855:128::-;938:4;959:5;:12;;:19;972:5;959:19;;;;;;;;;;;;;;;;;;;;;;;;;952:26;;855:128;;;;:::o;1613:149:4:-;1687:30;1707:9;1687:5;1693;1687:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1687:12:4;;;;;;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;1740:9;1728:29;;;1751:5;1728:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1728:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:149;;:::o;5532:1137:2:-;5647:27;5705:21;5764:24;6504:27;5574:13;:11;:13::i;:::-;5571:1068;;;5691:5;;;;;;;;;;;5647:50;;5729:13;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5729:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5729:27:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5729:27:2;;;;;;;;;;;;;;;;5705:51;;5791:47;5834:3;5791:38;5809:19;;5791:13;:17;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;5764:74;;5909:13;:18;;;5928;;;;;;;;;;;5948:42;5969:20;;5948:16;:20;;:42;;;;:::i;:::-;5909:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5909:82:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5909:82:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5909:82:2;;;;;;;;;;;;;;;;;5999:13;:18;;;6018:16;;;;;;;;;;;6036:42;6057:20;;6036:16;:20;;:42;;;;:::i;:::-;5999:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5999:80:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5999:80:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5999:80:2;;;;;;;;;;;;;;;;;6181:5;;;;;;;;;;;6188:16;;;;;;;;;;;6206:11;;6163:55;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6163:55:2;6140:20;;:78;;;;;;;;;;;;;;;;;;6226:13;:18;;;6245:20;;;;;;;;;;;6267:40;6288:18;;6267:16;:20;;:40;;;;:::i;:::-;6226:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6226:82:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6226:82:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6226:82:2;;;;;;;;;;;;;;;;;6349:13;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6349:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6349:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6349:29:2;;;;;;;;;;;;;;;;;6548:5;;;;;;;;;;;6504:50;;6562:13;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6562:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6562:23:2;;;;6593:13;:31;;;6625:6;;;;;;;;;;;6593:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6593:39:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6593:39:2;;;;5571:1068;6644:20;:18;:20::i;:::-;5532:1137;;;;:::o;1347:141:4:-;1418:27;1435:9;1418:5;1424;1418:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1418:12:4;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1466:9;1456:27;;;1477:5;1456:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1456:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:141;;:::o;1512:171:15:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;434:198:12:-;553:12;541:38:3;551:9;562:16;;;;;;;;;;;;;;;;;;541:9;:38::i;:::-;575:52:12;602:12;616:10;575:26;:52::i;:::-;434:198;;;:::o;203:380:14:-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o;503:246:9:-;703:5;;;;;;;;;;;681:34;;;716:12;730;681:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;681:62:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:62:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;681:62:9;;;;;;;;;;;;;;;;673:71;;;;;;;;503:246;;:::o;1563:88:8:-;1603:6;;;;;;;;;;;:14;;;1624:9;1635:10;1603:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1603:43:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1603:43:8;;;;;1563:88::o;486:104:5:-;580:5;558;:12;;:19;571:5;558:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;486:104;;:::o;665:283:14:-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o;1278:197:8:-;1321:13;:11;:13::i;:::-;1317:127;;;1344:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:14:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1344:14:8;;;;1366:6;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:28:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:28:8;;;;1317:127;;;1415:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1415:22:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1415:22:8;;;;1317:127;1450:20;:18;:20::i;:::-;1278:197::o;321:100:5:-;412:4;390:5;:12;;:19;403:5;390:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;321:100;;:::o;1504:180:11:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;1627:26;:52::i;:::-;1504:180;;:::o;919:38:7:-;:::o;872:209:10:-;977:52;1004:12;1018:10;977:26;:52::i;:::-;1072:3;;1043:25;1057:10;1043:9;;:13;;:25;;;;:::i;:::-;:32;;1035:41;;;;;;;;872:209;;:::o;3779:175:6:-;3916:1;3892:26;;:12;:26;;;;3884:35;;;;;;;;3947:1;3933:10;:15;;3925:24;;;;;;;;3779:175;;:::o;1091:5581:2:-;;;;;;;;;;:::o",
  "source": "/**\n * @title ZepTokenCrowdsale.sol\n * @dev This is the crowd sale contract that will sell the ZepTokens.  It uses the\n * Crowdsale capabilities provided by openzeppelin-solidity.\n * It can also be used with other MintableTokens.\n */\n\npragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract ZepTokenCrowdsale is Crowdsale, MintedCrowdsale, CappedCrowdsale, TimedCrowdsale, WhitelistedCrowdsale, RefundableCrowdsale\n{\n\n  // Set investor limits.  Min and max on an aggregate basis.\n  // Track limits in the mapping.\n  uint256 public _investorMinCap = 10000000000000000; // 0.01 ETH\n  uint256 public _investorMaxCap = 250000000000000000000; // 250 ETH\n  mapping(address => uint256) public _investorContributions;\n\n  // Crowdsale will run through serval phases.  Keep track of this in an enum.\n  enum CrowdsalePhase { PreICO, PublicICO }\n  CrowdsalePhase public phase = CrowdsalePhase.PreICO;\n\n  // Token distribution\n  uint256 public communityPercentage = 70;\n  uint256 public foundersPercentage = 10;\n  uint256 public partnersPercentage = 10;\n  uint256 public developersPercentage = 10;\n  // Addresses for the distribution\n  address public foundersFundAddr;\n  address public foundersTimelockAddr;\n  address public partnersFundAddr;\n  address public developersFundAddr;\n  uint    public releaseTime;\n\n  /**\n   *  @dev Constructor Constructor does nothing except call into constructors it inherits from.\n   *  @param rate conversion rate between ETH and this token.\n   *  @param wallet address for creator of the crowdsale\n   *  @param token the ERC20 token this crowdsale will manage and create\n   *  @param cap Maximum number of tokens that can be created.\n   *  @param goal Minimum amount to be raised for the crowdsale to complete successfully\n   */\n  constructor(\n    uint256 rate,\n    address wallet,\n    ERC20 token,\n    uint256 cap,\n    uint256 goal,\n    uint256 openingTime,\n    uint256 closingTime,\n    address foundersFund,\n    address partnersFund,\n    address developersFund,\n    uint releaseTokensTime\n  )\n    Crowdsale(rate, wallet, token)\n    CappedCrowdsale(cap)\n    TimedCrowdsale(openingTime, closingTime)\n    RefundableCrowdsale(goal)\n    public\n  {\n      require(goal <= cap);\n      foundersFundAddr = foundersFund;\n      partnersFundAddr = partnersFund;\n      developersFundAddr = developersFund;\n      releaseTime = releaseTokensTime;\n  }\n\n  /**\n   *  @dev _preValidatePurchase Extends validation of parent\n   *  Add additional validation with a minimum and maximum contribution allows\n   *  from each of the investors.  The mapping _investorContributions keeps track\n   *  of how much each investor address has contributed.\n   *  @param beneficiary address trying to purchase tokens\n   *  @param weiAmount amount the beneficiary is attempting to purchase\n   */\n  function _preValidatePurchase(\n    address beneficiary,\n    uint weiAmount\n    ) internal\n  {\n    super._preValidatePurchase(beneficiary, weiAmount);\n    uint256 existingContributions = _investorContributions[beneficiary];\n    uint256 newContribution = SafeMath.add(existingContributions, weiAmount);\n    require(newContribution >= _investorMinCap);\n    require(newContribution <= _investorMaxCap);\n    _investorContributions[beneficiary] = newContribution;\n  }\n\n  /**\n   *  @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n   *  @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n   *  @return Amount of tokens the contributor has purchased so far.\n   */\n  function getUserContribution(address contributor)\n    public view returns(uint256)\n  {\n    return(_investorContributions[contributor]);\n  }\n\n  /**\n   *  @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n   *  @param newPhase you want the ICO to be in\n   */\n  function setCrowdsalePhase(uint newPhase) onlyOwner public\n  {\n    if(uint(CrowdsalePhase.PreICO) == newPhase) {\n      phase = CrowdsalePhase.PreICO;\n    } else if (uint(CrowdsalePhase.PublicICO) == newPhase) {\n      phase = CrowdsalePhase.PublicICO;\n    }\n    // Pre ICO rate is better than the public rate\n    if(phase == CrowdsalePhase.PreICO) {\n      rate = 250;\n    }\n    else if (phase == CrowdsalePhase.PublicICO) {\n      rate = 500;\n    }\n  }\n\n  /**\n   * @dev The wallet receives funds during the PreICO phase, vault receives funds during the PublicICO phase\n   */\n  function _forwardFunds() internal {\n\n    if(phase == CrowdsalePhase.PreICO) {\n      wallet.transfer(msg.value);\n    } else if (phase == CrowdsalePhase.PublicICO) {\n      super._forwardFunds();\n    }\n  }\n\n  /**\n   * @dev Owner calls this to finalize the crowdsale. Must be after the sale has closed.\n   */\n  function finalization() internal {\n    if(goalReached()) {\n      // Finish minting. Freeze the total supply.\n      MintableToken mintableToken = MintableToken(token);\n      uint256 alreadyMinted = mintableToken.totalSupply();\n      uint256 finalTotalSupply = alreadyMinted.div(communityPercentage).mul(100);\n      // Mint tokens for the founders, partners and developers\n      mintableToken.mint(developersFundAddr, finalTotalSupply.div(developersPercentage));\n      mintableToken.mint(partnersFundAddr, finalTotalSupply.div(developersPercentage));\n      // Lockup the tokens for founders and partners\n      foundersTimelockAddr = new TokenTimelock(token, foundersFundAddr, releaseTime);\n      mintableToken.mint(foundersTimelockAddr, finalTotalSupply.div(foundersPercentage));\n      // Minting in now finished\n      mintableToken.finishMinting();\n      // Unpause the token to allow it to trade normally.\n      // Make sure to tranfer ownership back to the wallet.\n      PausableToken pausableToken = PausableToken(token);\n      pausableToken.unpause();\n      pausableToken.transferOwnership(wallet);\n    }\n    super.finalization();\n  }\n\n} // End of contract ZepTokenCrowdsale\n",
  "sourcePath": "/Users/yglm/Documents/Development/Ethereum/react-truffle/contracts/ZepTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/yglm/Documents/Development/Ethereum/react-truffle/contracts/ZepTokenCrowdsale.sol",
    "exportedSymbols": {
      "ZepTokenCrowdsale": [
        449
      ]
    },
    "id": 450,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "235:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2027,
        "src": "261:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2267,
        "src": "325:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2165,
        "src": "397:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2651,
        "src": "469:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 973,
        "src": "541:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 91,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1162,
        "src": "607:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 92,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1224,
        "src": "688:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1338,
        "src": "771:87:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 94,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1135,
        "src": "859:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1311,
        "src": "948:81:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1492,
        "src": "1030:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 97,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 972,
              "src": "1121:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$972",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "1121:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1161,
              "src": "1132:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1161",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "1132:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1223,
              "src": "1149:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1223",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 103,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1310,
              "src": "1166:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1310",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 104,
            "nodeType": "InheritanceSpecifier",
            "src": "1166:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1337,
              "src": "1182:20:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$1337",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "1182:20:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1134,
              "src": "1204:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1134",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "1204:19:2"
          }
        ],
        "contractDependencies": [
          567,
          674,
          972,
          1020,
          1134,
          1161,
          1223,
          1310,
          1337,
          1577,
          2650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 449,
        "linearizedBaseContracts": [
          449,
          1134,
          1020,
          1337,
          1310,
          1223,
          1161,
          972,
          567,
          674,
          1577
        ],
        "name": "ZepTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 111,
            "name": "_investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1325:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1325:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030303030303030",
              "id": 110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1358:17:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 114,
            "name": "_investorMaxCap",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1391:54:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1391:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030303030303030303030303030",
              "id": 113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1424:21:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000"
              },
              "value": "250000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 118,
            "name": "_investorContributions",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1460:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 117,
              "keyType": {
                "id": 115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1468:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1460:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 116,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1479:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ZepTokenCrowdsale.CrowdsalePhase",
            "id": 121,
            "members": [
              {
                "id": 119,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1623:6:2"
              },
              {
                "id": 120,
                "name": "PublicICO",
                "nodeType": "EnumValue",
                "src": "1631:9:2"
              }
            ],
            "name": "CrowdsalePhase",
            "nodeType": "EnumDefinition",
            "src": "1601:41:2"
          },
          {
            "constant": false,
            "id": 125,
            "name": "phase",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1645:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
            },
            "typeName": {
              "contractScope": null,
              "id": 122,
              "name": "CrowdsalePhase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 121,
              "src": "1645:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 123,
                "name": "CrowdsalePhase",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 121,
                "src": "1675:14:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                }
              },
              "id": 124,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1675:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 128,
            "name": "communityPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1725:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1725:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 127,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1762:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 131,
            "name": "foundersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1768:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 129,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1768:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 130,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1804:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 134,
            "name": "partnersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1810:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 132,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1810:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1846:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 137,
            "name": "developersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1852:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1852:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1890:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 139,
            "name": "foundersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1932:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1932:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 141,
            "name": "foundersTimelockAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1967:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 140,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1967:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 143,
            "name": "partnersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2006:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2006:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 145,
            "name": "developersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2041:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2041:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 147,
            "name": "releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2078:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2078:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "2973:193:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2989:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 189,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2997:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2989:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "2981:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "foundersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3009:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "foundersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3028:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3009:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "partnersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3048:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "partnersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3067:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3048:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "developersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3087:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "developersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3108:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3087:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3087:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "3130:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "releaseTokensTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "3144:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3130:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:31:2"
                }
              ]
            },
            "documentation": " @dev Constructor Constructor does nothing except call into constructors it inherits from.\n @param rate conversion rate between ETH and this token.\n @param wallet address for creator of the crowdsale\n @param token the ERC20 token this crowdsale will manage and create\n @param cap Maximum number of tokens that can be created.\n @param goal Minimum amount to be raised for the crowdsale to complete successfully",
            "id": 210,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 172,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 149,
                    "src": "2839:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 173,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 151,
                    "src": "2845:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 174,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "2853:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2026",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 175,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 171,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 972,
                  "src": "2829:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$972_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2829:30:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155,
                    "src": "2880:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 178,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 176,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1223,
                  "src": "2864:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1223_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2864:20:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 180,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "2904:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 181,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "2917:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 182,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 179,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1310,
                  "src": "2889:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1310_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2889:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 184,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "2954:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 185,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 183,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1134,
                  "src": "2934:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1134_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:25:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2578:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2596:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2616:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2026",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 152,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2026,
                    "src": "2616:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2026",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2633:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2650:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2668:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2693:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "foundersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2718:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "partnersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2744:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "developersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2770:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "name": "releaseTokensTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2798:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2572:252:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2973:0:2"
            },
            "scope": 449,
            "src": "2561:605:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "3684:369:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "3717:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3730:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "3690:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1336,
                      "src": "3690:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:50:2"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "name": "existingContributions",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3746:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3746:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "_investorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "3778:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 228,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3801:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3778:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3746:67:2"
                },
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "name": "newContribution",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3819:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3819:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "existingContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3858:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 235,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3881:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "3845:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1491_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1490,
                      "src": "3845:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3819:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "3905:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "_investorMinCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "3924:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3905:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "3897:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 245,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "3954:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "_investorMaxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "3973:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3954:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "3946:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_investorContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3995:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "4018:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3995:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "newContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4033:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3995:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:53:2"
                }
              ]
            },
            "documentation": " @dev _preValidatePurchase Extends validation of parent\n Add additional validation with a minimum and maximum contribution allows\n from each of the investors.  The mapping _investorContributions keeps track\n of how much each investor address has contributed.\n @param beneficiary address trying to purchase tokens\n @param weiAmount amount the beneficiary is attempting to purchase",
            "id": 257,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3627:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3652:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:51:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3684:0:2"
            },
            "scope": 449,
            "src": "3592:461:2",
            "stateMutability": "nonpayable",
            "superFunction": 1336,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "4444:54:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "_investorContributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "4457:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "contributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 259,
                          "src": "4480:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4457:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 267,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4456:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 268,
                  "nodeType": "Return",
                  "src": "4450:43:2"
                }
              ]
            },
            "documentation": " @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n @return Amount of tokens the contributor has purchased so far.",
            "id": 270,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4388:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4387:21:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4433:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4433:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4432:9:2"
            },
            "scope": 449,
            "src": "4359:139:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "4711:389:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "CrowdsalePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "4725:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                              "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4725:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        ],
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4720:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4720:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 281,
                      "name": "newPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4751:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4720:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 290,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "4820:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PublicICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4820:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          ],
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4815:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4815:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "newPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "4849:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4815:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 301,
                    "nodeType": "IfStatement",
                    "src": "4811:95:2",
                    "trueBody": {
                      "id": 300,
                      "nodeType": "Block",
                      "src": "4859:47:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 295,
                              "name": "phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "4867:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 296,
                                "name": "CrowdsalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "4875:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PublicICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4875:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "src": "4867:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "id": 299,
                          "nodeType": "ExpressionStatement",
                          "src": "4867:32:2"
                        }
                      ]
                    }
                  },
                  "id": 302,
                  "nodeType": "IfStatement",
                  "src": "4717:189:2",
                  "trueBody": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "4761:44:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "4769:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 284,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "4777:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4777:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "src": "4769:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "4769:29:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 303,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "4965:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 304,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4974:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4974:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4965:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "5036:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "5045:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5045:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "5036:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 321,
                    "nodeType": "IfStatement",
                    "src": "5032:64:2",
                    "trueBody": {
                      "id": 320,
                      "nodeType": "Block",
                      "src": "5071:25:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "5079:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5086:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            "src": "5079:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 319,
                          "nodeType": "ExpressionStatement",
                          "src": "5079:10:2"
                        }
                      ]
                    }
                  },
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "4962:134:2",
                  "trueBody": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "4997:25:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "5005:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "323530",
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5012:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_250_by_1",
                              "typeString": "int_const 250"
                            },
                            "value": "250"
                          },
                          "src": "5005:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "5005:10:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": " @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n @param newPhase you want the ICO to be in",
            "id": 324,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 275,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 274,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1525,
                  "src": "4692:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4692:9:2"
              }
            ],
            "name": "setCrowdsalePhase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "name": "newPhase",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4677:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4677:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4676:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4711:0:2"
            },
            "scope": 449,
            "src": "4650:450:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "5259:168:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "5269:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "5278:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5278:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "5269:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "5352:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 340,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "5361:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5361:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "5352:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 349,
                    "nodeType": "IfStatement",
                    "src": "5348:75:2",
                    "trueBody": {
                      "id": 348,
                      "nodeType": "Block",
                      "src": "5387:36:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 343,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2733,
                                "src": "5395:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                                  "typeString": "contract super ZepTokenCrowdsale"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1133,
                              "src": "5395:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5395:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 347,
                          "nodeType": "ExpressionStatement",
                          "src": "5395:21:2"
                        }
                      ]
                    }
                  },
                  "id": 350,
                  "nodeType": "IfStatement",
                  "src": "5266:157:2",
                  "trueBody": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "5301:41:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 334,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2665,
                                "src": "5325:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5325:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "5309:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5309:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5309:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "5309:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev The wallet receives funds during the PreICO phase, vault receives funds during the PublicICO phase",
            "id": 352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5247:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5259:0:2"
            },
            "scope": 449,
            "src": "5225:202:2",
            "stateMutability": "nonpayable",
            "superFunction": 1133,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "5565:1104:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 355,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "5574:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5574:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 441,
                  "nodeType": "IfStatement",
                  "src": "5571:1068:2",
                  "trueBody": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "5589:1050:2",
                    "statements": [
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "name": "mintableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5647:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintableToken_$2164",
                              "typeString": "contract MintableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 357,
                              "name": "MintableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2164,
                              "src": "5647:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 362,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 360,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "5691:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 359,
                            "name": "MintableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2164,
                            "src": "5677:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MintableToken_$2164_$",
                              "typeString": "type(contract MintableToken)"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5677:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintableToken_$2164",
                            "typeString": "contract MintableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5647:50:2"
                      },
                      {
                        "assignments": [
                          364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 364,
                            "name": "alreadyMinted",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5705:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5705:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 368,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5729:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1876,
                            "src": "5729:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5729:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5705:51:2"
                      },
                      {
                        "assignments": [
                          370
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 370,
                            "name": "finalTotalSupply",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5764:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5764:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 378,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5834:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 373,
                                  "name": "communityPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 128,
                                  "src": "5809:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 371,
                                  "name": "alreadyMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 364,
                                  "src": "5791:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "5791:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5791:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1432,
                            "src": "5791:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5791:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5764:74:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "developersFundAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "5928:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "developersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "5969:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 383,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "5948:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "5948:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5948:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5909:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "5909:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5909:82:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "5909:82:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 392,
                              "name": "partnersFundAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "6018:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 395,
                                  "name": "developersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "6057:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "6036:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "6036:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6036:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5999:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "5999:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5999:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 398,
                        "nodeType": "ExpressionStatement",
                        "src": "5999:80:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 399,
                            "name": "foundersTimelockAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "6140:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 402,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "6181:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$2026",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 403,
                                "name": "foundersFundAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "6188:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 404,
                                "name": "releaseTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "6206:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$2026",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6163:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20Basic_$2058_$_t_address_$_t_uint256_$returns$_t_contract$_TokenTimelock_$2650_$",
                                "typeString": "function (contract ERC20Basic,address,uint256) returns (contract TokenTimelock)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 400,
                                "name": "TokenTimelock",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2650,
                                "src": "6167:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenTimelock_$2650",
                                  "typeString": "contract TokenTimelock"
                                }
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6163:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$2650",
                              "typeString": "contract TokenTimelock"
                            }
                          },
                          "src": "6140:78:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "6140:78:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "foundersTimelockAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "6245:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 414,
                                  "name": "foundersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 131,
                                  "src": "6288:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 412,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "6267:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "6267:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6267:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 408,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6226:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "6226:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6226:82:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "6226:82:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6349:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finishMinting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2163,
                            "src": "6349:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6349:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "6349:29:2"
                      },
                      {
                        "assignments": [
                          424
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 424,
                            "name": "pausableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "6504:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableToken_$2266",
                              "typeString": "contract PausableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 423,
                              "name": "PausableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2266,
                              "src": "6504:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 428,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "6548:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 425,
                            "name": "PausableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "6534:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PausableToken_$2266_$",
                              "typeString": "type(contract PausableToken)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6534:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PausableToken_$2266",
                            "typeString": "contract PausableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6504:50:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "6562:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1396,
                            "src": "6562:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6562:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "6562:23:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 437,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "6625:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 434,
                              "name": "pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "6593:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1553,
                            "src": "6593:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6593:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "6593:39:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "6644:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1117,
                      "src": "6644:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6644:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6644:20:2"
                }
              ]
            },
            "documentation": "@dev Owner calls this to finalize the crowdsale. Must be after the sale has closed.",
            "id": 448,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5553:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5565:0:2"
            },
            "scope": 449,
            "src": "5532:1137:2",
            "stateMutability": "nonpayable",
            "superFunction": 1117,
            "visibility": "internal"
          }
        ],
        "scope": 450,
        "src": "1091:5581:2"
      }
    ],
    "src": "235:6475:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/yglm/Documents/Development/Ethereum/react-truffle/contracts/ZepTokenCrowdsale.sol",
    "exportedSymbols": {
      "ZepTokenCrowdsale": [
        449
      ]
    },
    "id": 450,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "235:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2027,
        "src": "261:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2267,
        "src": "325:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2165,
        "src": "397:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 2651,
        "src": "469:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 973,
        "src": "541:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 91,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1162,
        "src": "607:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 92,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1224,
        "src": "688:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1338,
        "src": "771:87:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 94,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1135,
        "src": "859:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1311,
        "src": "948:81:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 450,
        "sourceUnit": 1492,
        "src": "1030:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 97,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 972,
              "src": "1121:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$972",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 98,
            "nodeType": "InheritanceSpecifier",
            "src": "1121:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1161,
              "src": "1132:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1161",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "1132:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1223,
              "src": "1149:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1223",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 103,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1310,
              "src": "1166:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1310",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 104,
            "nodeType": "InheritanceSpecifier",
            "src": "1166:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1337,
              "src": "1182:20:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$1337",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "1182:20:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1134,
              "src": "1204:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1134",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "1204:19:2"
          }
        ],
        "contractDependencies": [
          567,
          674,
          972,
          1020,
          1134,
          1161,
          1223,
          1310,
          1337,
          1577,
          2650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 449,
        "linearizedBaseContracts": [
          449,
          1134,
          1020,
          1337,
          1310,
          1223,
          1161,
          972,
          567,
          674,
          1577
        ],
        "name": "ZepTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 111,
            "name": "_investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1325:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1325:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030303030303030",
              "id": 110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1358:17:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 114,
            "name": "_investorMaxCap",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1391:54:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1391:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030303030303030303030303030",
              "id": 113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1424:21:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000"
              },
              "value": "250000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 118,
            "name": "_investorContributions",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1460:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 117,
              "keyType": {
                "id": 115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1468:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1460:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 116,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1479:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ZepTokenCrowdsale.CrowdsalePhase",
            "id": 121,
            "members": [
              {
                "id": 119,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1623:6:2"
              },
              {
                "id": 120,
                "name": "PublicICO",
                "nodeType": "EnumValue",
                "src": "1631:9:2"
              }
            ],
            "name": "CrowdsalePhase",
            "nodeType": "EnumDefinition",
            "src": "1601:41:2"
          },
          {
            "constant": false,
            "id": 125,
            "name": "phase",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1645:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
            },
            "typeName": {
              "contractScope": null,
              "id": 122,
              "name": "CrowdsalePhase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 121,
              "src": "1645:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 123,
                "name": "CrowdsalePhase",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 121,
                "src": "1675:14:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                }
              },
              "id": 124,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1675:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 128,
            "name": "communityPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1725:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1725:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 127,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1762:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 131,
            "name": "foundersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1768:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 129,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1768:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 130,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1804:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 134,
            "name": "partnersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1810:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 132,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1810:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1846:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 137,
            "name": "developersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1852:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1852:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1890:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 139,
            "name": "foundersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1932:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1932:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 141,
            "name": "foundersTimelockAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "1967:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 140,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1967:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 143,
            "name": "partnersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2006:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2006:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 145,
            "name": "developersFundAddr",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2041:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2041:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 147,
            "name": "releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 449,
            "src": "2078:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 146,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2078:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "2973:193:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2989:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 189,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2997:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2989:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "2981:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "foundersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3009:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "foundersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3028:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3009:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "partnersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3048:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "partnersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3067:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3048:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "developersFundAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "3087:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "developersFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3108:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3087:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3087:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "3130:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "releaseTokensTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "3144:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3130:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:31:2"
                }
              ]
            },
            "documentation": " @dev Constructor Constructor does nothing except call into constructors it inherits from.\n @param rate conversion rate between ETH and this token.\n @param wallet address for creator of the crowdsale\n @param token the ERC20 token this crowdsale will manage and create\n @param cap Maximum number of tokens that can be created.\n @param goal Minimum amount to be raised for the crowdsale to complete successfully",
            "id": 210,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 172,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 149,
                    "src": "2839:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 173,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 151,
                    "src": "2845:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 174,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "2853:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2026",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 175,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 171,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 972,
                  "src": "2829:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$972_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2829:30:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155,
                    "src": "2880:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 178,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 176,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1223,
                  "src": "2864:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1223_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2864:20:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 180,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "2904:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 181,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "2917:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 182,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 179,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1310,
                  "src": "2889:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1310_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2889:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 184,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "2954:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 185,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 183,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1134,
                  "src": "2934:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1134_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:25:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2578:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2596:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2616:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2026",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 152,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2026,
                    "src": "2616:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2026",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2633:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2650:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2668:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2693:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "foundersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2718:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "partnersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2744:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "developersFund",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2770:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "name": "releaseTokensTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2798:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2572:252:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2973:0:2"
            },
            "scope": 449,
            "src": "2561:605:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "3684:369:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "3717:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3730:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "3690:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1336,
                      "src": "3690:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:50:2"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "name": "existingContributions",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3746:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3746:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "_investorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "3778:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 228,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3801:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3778:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3746:67:2"
                },
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "name": "newContribution",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3819:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3819:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "existingContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3858:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 235,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "3881:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "3845:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1491_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1490,
                      "src": "3845:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3819:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "3905:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "_investorMinCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "3924:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3905:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "3897:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 245,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "3954:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "_investorMaxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "3973:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3954:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2668,
                        2669
                      ],
                      "referencedDeclaration": 2668,
                      "src": "3946:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_investorContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3995:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "4018:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3995:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "newContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4033:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3995:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:53:2"
                }
              ]
            },
            "documentation": " @dev _preValidatePurchase Extends validation of parent\n Add additional validation with a minimum and maximum contribution allows\n from each of the investors.  The mapping _investorContributions keeps track\n of how much each investor address has contributed.\n @param beneficiary address trying to purchase tokens\n @param weiAmount amount the beneficiary is attempting to purchase",
            "id": 257,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3627:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3652:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:51:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3684:0:2"
            },
            "scope": 449,
            "src": "3592:461:2",
            "stateMutability": "nonpayable",
            "superFunction": 1336,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "4444:54:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "_investorContributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "4457:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "contributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 259,
                          "src": "4480:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4457:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 267,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4456:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 268,
                  "nodeType": "Return",
                  "src": "4450:43:2"
                }
              ]
            },
            "documentation": " @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n @return Amount of tokens the contributor has purchased so far.",
            "id": 270,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4388:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4387:21:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "4433:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4433:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4432:9:2"
            },
            "scope": 449,
            "src": "4359:139:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "4711:389:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "CrowdsalePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "4725:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                              "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4725:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        ],
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4720:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4720:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 281,
                      "name": "newPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4751:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4720:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 290,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "4820:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PublicICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4820:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          ],
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4815:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4815:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "newPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "4849:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4815:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 301,
                    "nodeType": "IfStatement",
                    "src": "4811:95:2",
                    "trueBody": {
                      "id": 300,
                      "nodeType": "Block",
                      "src": "4859:47:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 295,
                              "name": "phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "4867:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 296,
                                "name": "CrowdsalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "4875:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PublicICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4875:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "src": "4867:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "id": 299,
                          "nodeType": "ExpressionStatement",
                          "src": "4867:32:2"
                        }
                      ]
                    }
                  },
                  "id": 302,
                  "nodeType": "IfStatement",
                  "src": "4717:189:2",
                  "trueBody": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "4761:44:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "4769:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 284,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "4777:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4777:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "src": "4769:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "4769:29:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 303,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "4965:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 304,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4974:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4974:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4965:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "5036:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "5045:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5045:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "5036:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 321,
                    "nodeType": "IfStatement",
                    "src": "5032:64:2",
                    "trueBody": {
                      "id": 320,
                      "nodeType": "Block",
                      "src": "5071:25:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "5079:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5086:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            "src": "5079:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 319,
                          "nodeType": "ExpressionStatement",
                          "src": "5079:10:2"
                        }
                      ]
                    }
                  },
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "4962:134:2",
                  "trueBody": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "4997:25:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "5005:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "323530",
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5012:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_250_by_1",
                              "typeString": "int_const 250"
                            },
                            "value": "250"
                          },
                          "src": "5005:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "5005:10:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": " @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n @param newPhase you want the ICO to be in",
            "id": 324,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 275,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 274,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1525,
                  "src": "4692:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4692:9:2"
              }
            ],
            "name": "setCrowdsalePhase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "name": "newPhase",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4677:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4677:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4676:15:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4711:0:2"
            },
            "scope": 449,
            "src": "4650:450:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "5259:168:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "5269:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "5278:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5278:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "5269:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "5352:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 340,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "5361:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$121_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5361:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$121",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "5352:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 349,
                    "nodeType": "IfStatement",
                    "src": "5348:75:2",
                    "trueBody": {
                      "id": 348,
                      "nodeType": "Block",
                      "src": "5387:36:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 343,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2733,
                                "src": "5395:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                                  "typeString": "contract super ZepTokenCrowdsale"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1133,
                              "src": "5395:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5395:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 347,
                          "nodeType": "ExpressionStatement",
                          "src": "5395:21:2"
                        }
                      ]
                    }
                  },
                  "id": 350,
                  "nodeType": "IfStatement",
                  "src": "5266:157:2",
                  "trueBody": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "5301:41:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 334,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2665,
                                "src": "5325:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5325:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "5309:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5309:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5309:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "5309:26:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev The wallet receives funds during the PreICO phase, vault receives funds during the PublicICO phase",
            "id": 352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5247:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5259:0:2"
            },
            "scope": 449,
            "src": "5225:202:2",
            "stateMutability": "nonpayable",
            "superFunction": 1133,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "5565:1104:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 355,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "5574:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5574:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 441,
                  "nodeType": "IfStatement",
                  "src": "5571:1068:2",
                  "trueBody": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "5589:1050:2",
                    "statements": [
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "name": "mintableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5647:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintableToken_$2164",
                              "typeString": "contract MintableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 357,
                              "name": "MintableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2164,
                              "src": "5647:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 362,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 360,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "5691:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 359,
                            "name": "MintableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2164,
                            "src": "5677:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MintableToken_$2164_$",
                              "typeString": "type(contract MintableToken)"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5677:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintableToken_$2164",
                            "typeString": "contract MintableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5647:50:2"
                      },
                      {
                        "assignments": [
                          364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 364,
                            "name": "alreadyMinted",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5705:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5705:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 368,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5729:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1876,
                            "src": "5729:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5729:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5705:51:2"
                      },
                      {
                        "assignments": [
                          370
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 370,
                            "name": "finalTotalSupply",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "5764:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5764:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 378,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5834:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 373,
                                  "name": "communityPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 128,
                                  "src": "5809:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 371,
                                  "name": "alreadyMinted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 364,
                                  "src": "5791:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "5791:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5791:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1432,
                            "src": "5791:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5791:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5764:74:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "developersFundAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "5928:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "developersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "5969:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 383,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "5948:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "5948:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5948:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5909:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "5909:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5909:82:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "5909:82:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 392,
                              "name": "partnersFundAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "6018:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 395,
                                  "name": "developersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "6057:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "6036:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "6036:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6036:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "5999:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "5999:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5999:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 398,
                        "nodeType": "ExpressionStatement",
                        "src": "5999:80:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 399,
                            "name": "foundersTimelockAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "6140:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 402,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "6181:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$2026",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 403,
                                "name": "foundersFundAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "6188:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 404,
                                "name": "releaseTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "6206:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$2026",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6163:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20Basic_$2058_$_t_address_$_t_uint256_$returns$_t_contract$_TokenTimelock_$2650_$",
                                "typeString": "function (contract ERC20Basic,address,uint256) returns (contract TokenTimelock)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 400,
                                "name": "TokenTimelock",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2650,
                                "src": "6167:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenTimelock_$2650",
                                  "typeString": "contract TokenTimelock"
                                }
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6163:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$2650",
                              "typeString": "contract TokenTimelock"
                            }
                          },
                          "src": "6140:78:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "6140:78:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "foundersTimelockAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "6245:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 414,
                                  "name": "foundersPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 131,
                                  "src": "6288:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 412,
                                  "name": "finalTotalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "6267:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1446,
                                "src": "6267:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6267:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 408,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6226:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2144,
                            "src": "6226:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6226:82:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "6226:82:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6349:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$2164",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finishMinting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2163,
                            "src": "6349:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6349:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "6349:29:2"
                      },
                      {
                        "assignments": [
                          424
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 424,
                            "name": "pausableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 448,
                            "src": "6504:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableToken_$2266",
                              "typeString": "contract PausableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 423,
                              "name": "PausableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2266,
                              "src": "6504:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 428,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "6548:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$2026",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 425,
                            "name": "PausableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2266,
                            "src": "6534:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PausableToken_$2266_$",
                              "typeString": "type(contract PausableToken)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6534:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PausableToken_$2266",
                            "typeString": "contract PausableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6504:50:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "6562:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1396,
                            "src": "6562:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6562:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "6562:23:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 437,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "6625:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 434,
                              "name": "pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "6593:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$2266",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1553,
                            "src": "6593:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6593:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "6593:39:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "6644:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$449",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1117,
                      "src": "6644:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6644:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6644:20:2"
                }
              ]
            },
            "documentation": "@dev Owner calls this to finalize the crowdsale. Must be after the sale has closed.",
            "id": 448,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5553:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5565:0:2"
            },
            "scope": 449,
            "src": "5532:1137:2",
            "stateMutability": "nonpayable",
            "superFunction": 1117,
            "visibility": "internal"
          }
        ],
        "scope": 450,
        "src": "1091:5581:2"
      }
    ],
    "src": "235:6475:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-29T17:37:00.657Z"
}